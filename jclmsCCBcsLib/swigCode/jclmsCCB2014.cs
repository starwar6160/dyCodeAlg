/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace jclms {

public class jclmsCCB2014 {
  public static int ZW_AES_BLOCK_SIZE {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_AES_BLOCK_SIZE_get();
      return ret;
    } 
  }

  public static int ZW_SM3_DGST_SIZE {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_SM3_DGST_SIZE_get();
      return ret;
    } 
  }

  public static void JcLockSetValidity(JCINPUT jc, int index, int val) {
    jclmsCCB2014PINVOKE.JcLockSetValidity(JCINPUT.getCPtr(jc), index, val);
  }

  public static JCERROR JcLockCheckInput(JCINPUT jc) {
    JCERROR ret = (JCERROR)jclmsCCB2014PINVOKE.JcLockCheckInput(JCINPUT.getCPtr(jc));
    return ret;
  }

  public static void zwNewJcInput(JCINPUT pjc) {
    jclmsCCB2014PINVOKE.zwNewJcInput(JCINPUT.getCPtr(pjc));
  }

  public static int zwGetDynaCode(JCINPUT arg0) {
    int ret = jclmsCCB2014PINVOKE.zwGetDynaCode(JCINPUT.getCPtr(arg0));
    return ret;
  }

  public static JCMATCH zwReverseVerifyDynaCode(JCINPUT arg0, int dstCode) {
    JCMATCH ret = new JCMATCH(jclmsCCB2014PINVOKE.zwReverseVerifyDynaCode(JCINPUT.getCPtr(arg0), dstCode), true);
    return ret;
  }

  public static int getVersion() {
    int ret = jclmsCCB2014PINVOKE.getVersion();
    return ret;
  }

  public static JCERROR CheckInputValid(JCINPUT arg0) {
    JCERROR ret = (JCERROR)jclmsCCB2014PINVOKE.CheckInputValid(JCINPUT.getCPtr(arg0));
    return ret;
  }

  public static int ZWEFS {
    get {
      int ret = jclmsCCB2014PINVOKE.ZWEFS_get();
      return ret;
    } 
  }

  public static int ZW_EXA {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_EXA_get();
      return ret;
    } 
  }

  public static int ZW_ECIES_PUBKEY_LEN {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_ECIES_PUBKEY_LEN_get();
      return ret;
    } 
  }

  public static int ZW_ECIES_PRIKEY_LEN {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_ECIES_PRIKEY_LEN_get();
      return ret;
    } 
  }

  public static int ZW_ECIES_ENCSYNCKEY_LEN {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_ECIES_ENCSYNCKEY_LEN_get();
      return ret;
    } 
  }

  public static int ZW_ECIES_HASH_LEN {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_ECIES_HASH_LEN_get();
      return ret;
    } 
  }

  public static int ZW_ECIES_MESSAGE_MAXLEN {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_ECIES_MESSAGE_MAXLEN_get();
      return ret;
    } 
  }

  public static int ZW_ECIES_CRYPT_TOTALLEN {
    get {
      int ret = jclmsCCB2014PINVOKE.ZW_ECIES_CRYPT_TOTALLEN_get();
      return ret;
    } 
  }

  public static int zwEciesKeyPairGen(string password, string outPriKeyStr, int priLen, string outPublicKeyStr, int pubLen) {
    int ret = jclmsCCB2014PINVOKE.zwEciesKeyPairGen(password, outPriKeyStr, priLen, outPublicKeyStr, pubLen);
    return ret;
  }

  public static int zwEciesEncrypt(string pubkeyStr, string PlainText, string outEncryptedSyncKeyStr, int syncKeyLen, string outMsgHashStr, int hashLen, string outCryptedTextStr, int cryptLen) {
    int ret = jclmsCCB2014PINVOKE.zwEciesEncrypt(pubkeyStr, PlainText, outEncryptedSyncKeyStr, syncKeyLen, outMsgHashStr, hashLen, outCryptedTextStr, cryptLen);
    return ret;
  }

  public static int zwEciesDecrypt(string prikeyStr, string outPlainText, int plainLen, string EncryptedSyncKeyStr, string MsgHashStr, string CryptedTextStr) {
    int ret = jclmsCCB2014PINVOKE.zwEciesDecrypt(prikeyStr, outPlainText, plainLen, EncryptedSyncKeyStr, MsgHashStr, CryptedTextStr);
    return ret;
  }

  public static int EciesGenKeyPair() {
    int ret = jclmsCCB2014PINVOKE.EciesGenKeyPair();
    return ret;
  }

  public static void EciesDelete(int eciesHandle) {
    jclmsCCB2014PINVOKE.EciesDelete(eciesHandle);
  }

  public static string EciesGetPubKey(int eciesHandle) {
    string ret = jclmsCCB2014PINVOKE.EciesGetPubKey(eciesHandle);
    return ret;
  }

  public static string EciesGetPriKey(int eciesHandle) {
    string ret = jclmsCCB2014PINVOKE.EciesGetPriKey(eciesHandle);
    return ret;
  }

  public static string EciesEncrypt(string pubKey, string plainText) {
    string ret = jclmsCCB2014PINVOKE.EciesEncrypt(pubKey, plainText);
    return ret;
  }

  public static string EciesDecrypt(string priKey, string cryptText) {
    string ret = jclmsCCB2014PINVOKE.EciesDecrypt(priKey, cryptText);
    return ret;
  }

  public static string zwMergePsk(string pskInput) {
    string ret = jclmsCCB2014PINVOKE.zwMergePsk(pskInput);
    return ret;
  }

  public static readonly int NUM_VALIDITY = jclmsCCB2014PINVOKE.NUM_VALIDITY_get();
  public static readonly int JC_ATMNO_MAXLEN = jclmsCCB2014PINVOKE.JC_ATMNO_MAXLEN_get();
  public static readonly int JC_LOCKNO_MAXLEN = jclmsCCB2014PINVOKE.JC_LOCKNO_MAXLEN_get();
  public static readonly int JC_PSK_LEN = jclmsCCB2014PINVOKE.JC_PSK_LEN_get();
}

}
